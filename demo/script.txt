var sch = new Schema(data[0], sch_types);

db.create("real_estate", sch);

db.insert("real_estate", data.slice(1));

db.dump("original");

has_lots_of_beds = function (beds) {return beds > 6;};
db.eval(db.select("real_estate", has_lots_of_beds);)

is_mf = function (type) {return type == "Multi-Family";};
change_to_md = function (type) {type = "Multidwelling";};
is_md = function (type) {return type == "Multidwelling";};
db.update("real_estate", change_to_md, is_mf);
db.eval(db.select("real_estate", is_mf)); /* RETURN NOTHING* */
db.eval(db.select("real_estate", is_md));

db.delete("real_estate", has_lots_of_beds);
db.eval(db.select("real_estate", has_lots_of_beds));

var proj_sch = new Schema([data[0][0]], [sch_types[0]]);
var proj_func = function(street) {return [street];};
db.eval(db.project("real_estate", proj_sch, proj_func));

var group_func = function(tup) {return [tup[4]];} /* Return number of beds */
var aggre_func = function(acc, tup) { if(acc === undefined) { return [parseInt(tup[9])]; } return [acc[0] + parseInt(tup[9])]; } /* Sum price */
db.eval(db.fold("real_estate", group_func, aggre_func));

db.load("original");